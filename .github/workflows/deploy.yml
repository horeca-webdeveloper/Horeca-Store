name: Laravel Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up PHP environment
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      # Step 3: Install Composer dependencies (without dev dependencies)
      - name: Clear Composer cache
        run: composer clear-cache

      - name: Install dependencies
        run: composer install --no-dev

      # Step 4: Set up AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 5: Ensure the storage directory exists, then fix permissions
      - name: Fix permissions for storage and cache directories
        run: |
          # Ensure that the storage directory exists
          if [ ! -d "/var/www/html/Horeca-Store/storage" ]; then
            echo "Storage directory does not exist. Creating it now..."
            sudo mkdir -p /var/www/html/Horeca-Store/storage
          fi
          
          # Ensure that subdirectories inside storage are writable
          sudo chown -R www-data:www-data /var/www/html/Horeca-Store/storage
          sudo chmod -R 775 /var/www/html/Horeca-Store/storage

          # Ensure that the bootstrap/cache directory exists and is writable
          if [ ! -d "/var/www/html/Horeca-Store/bootstrap/cache" ]; then
            echo "Bootstrap cache directory does not exist. Creating it now..."
            sudo mkdir -p /var/www/html/Horeca-Store/bootstrap/cache
          fi
          
          sudo chown -R www-data:www-data /var/www/html/Horeca-Store/bootstrap/cache
          sudo chmod -R 775 /var/www/html/Horeca-Store/bootstrap/cache

          # Ensure the cache/data directory exists
          sudo mkdir -p /var/www/html/Horeca-Store/storage/framework/cache/data
          sudo chown -R www-data:www-data /var/www/html/Horeca-Store/storage/framework/cache
          sudo chmod -R 775 /var/www/html/Horeca-Store/storage/framework/cache

      # Step 6: Add SSH key and deploy to AWS EC2
      - name: Add SSH key and deploy to EC2
        run: |
          # Create .ssh directory if it doesn't exist
          mkdir -p ~/.ssh
          
          # Save the SSH private key from GitHub secrets
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

          # Disable strict host key checking to avoid prompts
          echo "Host *" > ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config
          echo "  UserKnownHostsFile=/dev/null" >> ~/.ssh/config

          # Ensure the correct SSH user is used (ubuntu for Amazon Linux or ubuntu for Ubuntu)
          echo "Deploying to EC2 instance..."
          
          # SSH into EC2 instance and deploy
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ubuntu@${{ secrets.AWS_INSTANCE_IP }} << 'EOF'
            echo "Running git pull, composer install, migrations, and optimization on EC2..."
            cd /var/www/html/Horeca-Store
            git pull
            composer install --no-dev
            php artisan migrate --force
            php artisan optimize
            echo "Deployment complete!"
          EOF

      # Step 7: Optionally, clean up unused files in the EC2 instance (if needed)
      - name: Clean up unused files (optional)
        run: |
          echo "Cleaning up unused files..."
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ubuntu@${{ secrets.AWS_INSTANCE_IP }} << 'EOF'
            cd /var/www/html/Horeca-Store
            # Example of cleanup, if you want to clear cache or logs
            rm -rf /var/www/html/Horeca-Store/storage/framework/cache/*
            rm -rf /var/www/html/Horeca-Store/storage/logs/*
            echo "Cleanup complete!"
          EOF
