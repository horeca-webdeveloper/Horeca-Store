name: Laravel Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2
        
      # Step 2: Set up AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
        
      # Step 3: Deploy changes to EC2
      - name: Deploy to EC2
        run: |
          # Setup SSH
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          
          echo "Host *" > ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config
          echo "  UserKnownHostsFile=/dev/null" >> ~/.ssh/config
          
          # Deploy to EC2
          ssh -i ~/.ssh/id_ed25519 ubuntu@${{ secrets.AWS_INSTANCE_IP }} << 'EOF'
            set -e  # Exit on error
            
            echo "Starting deployment..."
            cd /var/www/html/Horeca-Store
            
            # Configure git with sudo
            sudo -u ubuntu git config --global --add safe.directory /var/www/html/Horeca-Store
            sudo -u ubuntu git config --global --add safe.directory '*'
            
            # Pull changes as ubuntu user
            sudo -u ubuntu git fetch origin main
            sudo -u ubuntu git reset --hard origin/main
            
            # Set correct ownership and permissions
            sudo chown -R www-data:www-data .
            sudo find . -type f -exec chmod 644 {} \;
            sudo find . -type d -exec chmod 755 {} \;
            
            # Set specific permissions for writable directories
            sudo chmod -R 775 storage bootstrap/cache
            sudo chown -R www-data:www-data storage bootstrap/cache
            
            # Create cache directories if they don't exist
            sudo -u www-data mkdir -p storage/framework/cache
            sudo -u www-data mkdir -p storage/framework/views
            sudo -u www-data mkdir -p storage/framework/sessions
            sudo -u www-data mkdir -p storage/framework/cache/data
            
            # Clear caches as www-data user
            sudo -u www-data php artisan cache:clear
            sudo -u www-data php artisan config:clear
            sudo -u www-data php artisan view:clear
            sudo -u www-data php artisan route:clear
            
            # Run migrations as www-data user
            sudo -u www-data php artisan migrate --force
            
            # Optimize
            sudo -u www-data php artisan optimize
            
            echo "Deployment completed successfully!"
            
            # Show latest commits
            echo "Latest commits:"
            git log -3 --oneline
          EOF
        
      # Step 4: Verify deployment
      - name: Verify deployment
        run: |
          ssh -i ~/.ssh/id_ed25519 ubuntu@${{ secrets.AWS_INSTANCE_IP }} << 'EOF'
            set -e  # Exit on error
            cd /var/www/html/Horeca-Store
            
            echo "Application version:"
            sudo -u www-data php artisan --version
            
            echo "Current git commit:"
            git rev-parse HEAD
            
            # Verify permissions
            echo "Checking storage directory permissions:"
            ls -la storage/
            echo "Checking cache directory permissions:"
            ls -la storage/framework/cache/
          EOF